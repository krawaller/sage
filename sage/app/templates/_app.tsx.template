// File generated by Sage, do not edit!

import React from 'react'
import { AppProps } from 'next/app'
import Head from 'next/head'
import {
  SageLinkMapContext,
  SageResourceContext,
  SageSettingsContext,
  SageCssVarsContext,
  useCssVarsTopLevel,
  useCssVars,
} from '__SAGEPATH__/components/contexts'
import type { SageLink, SageResource } from '__SAGEPATH__/processSource/processTypes'
import type { SagePage } from '__SAGEPATH__/components'
import { useObeyRemotePath } from '__SAGEPATH__/services/service.remote'
import BreadCrumbs from '__BREADCRUMBSPATH__' // Controlled via sage.config
import Controls from '__CONTROLSPATH__' // Controlled via sage.config

import css from './app.module.css'

type ResourcePageProps = {
  Component: SagePage<SageResource<any>>
  pageProps: any
}

const ResourcePage = (props: ResourcePageProps) => {
  const { Component, pageProps } = props
  const { resource } = Component
  const { cssVars } = useCssVars()
  useObeyRemotePath()
  return (
    <>
      <Head>
        <title>{sageLinkMap[resource.id].short}</title>
        <meta charSet="utf-8" />
        <meta name="viewport" content="initial-scale=1.0, width=device-width" />
        <link rel="stylesheet" href="/global.css" />
      </Head>
      <div style={cssVars} className={css.shell}>
        <div className={css.topbar}>
          <BreadCrumbs linkMap={sageLinkMap} resource={resource} />
          <Controls settings={sageSettings} />
        </div>
        <div className={css.content}>
          <Component
            {...pageProps}
            resource={resource}
            linkMap={sageLinkMap}
            settings={sageSettings}
          />
        </div>
      </div>
    </>
  )
}

const SageApp = (props: AppProps) => {
  const { Component: NextComponent, pageProps } = props
  const Component = NextComponent as unknown as SagePage
  const { resource } = Component
  const cssCtxVal = useCssVarsTopLevel(sageSettings.initialCssVars)
  return (
    <SageLinkMapContext.Provider value={sageLinkMap}>
      <SageResourceContext.Provider value={resource}>
        <SageSettingsContext.Provider value={sageSettings}>
          <SageCssVarsContext.Provider value={cssCtxVal}>
            <Head>
              <meta charSet="utf-8" />
              <meta
                name="viewport"
                content="initial-scale=1.0, width=device-width"
              />
              <link rel="stylesheet" href="/global.css" />
            </Head>
            {resource ? (
              <ResourcePage Component={Component} pageProps={pageProps} />
            ) : (
              <Component {...pageProps} />
            )}
          </SageCssVarsContext.Provider>
        </SageSettingsContext.Provider>
      </SageResourceContext.Provider>
    </SageLinkMapContext.Provider>
  )
}

export default SageApp

// Generated from source folder
const sageLinkMap: Record<string, SageLink> = __LINKMAP__

// Inlined from sage.config
const sageSettings = __SAGESETTINGS__
